/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 spaceShip.gltf 
*/

import React, { useEffect } from 'react'
import { useGraph, Vector3 } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from 'three';
import { animated, SpringValue, useSpring } from '@react-spring/three';

interface ModelProps {
    position?: SpringValue<number[]> | Vector3;
    rotation?: SpringValue<number[]> | Vector3;
    scale?: number;
}


export function Model(props: ModelProps) {
    const group = React.useRef<any>()
    const { scene, animations } = useGLTF('/spaceShip.gltf')
    const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
    const { nodes, materials } = useGraph(clone) as any
    const { actions } = useAnimations(animations, group)

    useEffect(() => {
        if (actions && actions['ArmatureAction']) {
            actions['ArmatureAction'].setLoop(THREE.LoopRepeat, Infinity);
            actions['ArmatureAction'].play();
        }
    }, [actions])

    useEffect(() => {
    }, [group])

    return (
        //scale={0.1} rotation={[1.5, 3, -2]} position={[-3, -1, 0]}
        <group ref={group} {...props as any} dispose={null}>
            <group>
                <group name="Armature" position={[0, -10.984, -0.766]} rotation={[-Math.PI / 2, 0, 0]}>
                    <primitive object={nodes.spaceship_Armature} />
                </group>
                <group name="reactor_0">
                    <skinnedMesh name="reactor" geometry={nodes.reactor.geometry} material={materials.reactors} skeleton={nodes.reactor.skeleton} />
                    <skinnedMesh name="reactor_1" geometry={nodes.reactor_1.geometry} material={materials.reactors} skeleton={nodes.reactor_1.skeleton} />
                </group>
                <group name="reactor001_0">
                    <skinnedMesh name="reactor001" geometry={nodes.reactor001.geometry} material={materials.reactors} skeleton={nodes.reactor001.skeleton} />
                    <skinnedMesh name="reactor001_1" geometry={nodes.reactor001_1.geometry} material={materials.reactors} skeleton={nodes.reactor001_1.skeleton} />
                </group>
                <group name="Circle010_0">
                    <skinnedMesh name="Circle010" geometry={nodes.Circle010.geometry} material={materials.engine} skeleton={nodes.Circle010.skeleton} />
                    <skinnedMesh name="Circle010_1" geometry={nodes.Circle010_1.geometry} material={materials.engine} skeleton={nodes.Circle010_1.skeleton} />
                </group>
                <group name="Circle002_0">
                    <skinnedMesh name="Circle002" geometry={nodes.Circle002.geometry} material={materials.engine} skeleton={nodes.Circle002.skeleton} />
                    <skinnedMesh name="Circle002_1" geometry={nodes.Circle002_1.geometry} material={materials.engine} skeleton={nodes.Circle002_1.skeleton} />
                </group>
                <group name="Circle001_0">
                    <skinnedMesh name="Circle001" geometry={nodes.Circle001.geometry} material={materials.fire} skeleton={nodes.Circle001.skeleton} />
                    <skinnedMesh name="Circle001_1" geometry={nodes.Circle001_1.geometry} material={materials.fire} skeleton={nodes.Circle001_1.skeleton} />
                </group>
                <group name="SpaceshipHull_0">
                    <skinnedMesh name="SpaceshipHull" geometry={nodes.SpaceshipHull.geometry} material={materials.hull} skeleton={nodes.SpaceshipHull.skeleton} />
                    <skinnedMesh name="SpaceshipHull_1" geometry={nodes.SpaceshipHull_1.geometry} material={materials.hull} skeleton={nodes.SpaceshipHull_1.skeleton} />
                </group>
                <group name="spaceshipChassis_0">
                    <skinnedMesh name="spaceshipChassis" geometry={nodes.spaceshipChassis.geometry} material={materials.chassis} skeleton={nodes.spaceshipChassis.skeleton} />
                    <skinnedMesh name="spaceshipChassis_1" geometry={nodes.spaceshipChassis_1.geometry} material={materials.chassis} skeleton={nodes.spaceshipChassis_1.skeleton} />
                </group>
                <group name="landingGear002_0">
                    <skinnedMesh name="landingGear002" geometry={nodes.landingGear002.geometry} material={materials.landingGear} skeleton={nodes.landingGear002.skeleton} />
                    <skinnedMesh name="landingGear002_1" geometry={nodes.landingGear002_1.geometry} material={materials.landingGear} skeleton={nodes.landingGear002_1.skeleton} />
                </group>
                <group name="landingGear001_0">
                    <skinnedMesh name="landingGear001" geometry={nodes.landingGear001.geometry} material={materials.landingGear} skeleton={nodes.landingGear001.skeleton} />
                    <skinnedMesh name="landingGear001_1" geometry={nodes.landingGear001_1.geometry} material={materials.landingGear} skeleton={nodes.landingGear001_1.skeleton} />
                </group>
                <group name="landingGear_0">
                    <skinnedMesh name="landingGear" geometry={nodes.landingGear.geometry} material={materials.landingGear} skeleton={nodes.landingGear.skeleton} />
                    <skinnedMesh name="landingGear_1" geometry={nodes.landingGear_1.geometry} material={materials.landingGear} skeleton={nodes.landingGear_1.skeleton} />
                </group>
                <group name="SpaceshipCockpit_0">
                    <skinnedMesh name="SpaceshipCockpit" geometry={nodes.SpaceshipCockpit.geometry} material={materials.cockpit} skeleton={nodes.SpaceshipCockpit.skeleton} />
                    <skinnedMesh name="SpaceshipCockpit_1" geometry={nodes.SpaceshipCockpit_1.geometry} material={materials.cockpit} skeleton={nodes.SpaceshipCockpit_1.skeleton} />
                </group>
                <group name="Circle000_0">
                    <skinnedMesh name="Circle000" geometry={nodes.Circle000.geometry} material={materials.engine} skeleton={nodes.Circle000.skeleton} />
                    <skinnedMesh name="Circle000_1" geometry={nodes.Circle000_1.geometry} material={materials.engine} skeleton={nodes.Circle000_1.skeleton} />
                </group>
                <group name="Circle023_0">
                    <skinnedMesh name="Circle023" geometry={nodes.Circle023.geometry} material={materials.engine} skeleton={nodes.Circle023.skeleton} />
                    <skinnedMesh name="Circle023_1" geometry={nodes.Circle023_1.geometry} material={materials.engine} skeleton={nodes.Circle023_1.skeleton} />
                </group>
                <group name="pivot_0">
                    <skinnedMesh name="pivot" geometry={nodes.pivot.geometry} material={materials.pivot} skeleton={nodes.pivot.skeleton} />
                    <skinnedMesh name="pivot_1" geometry={nodes.pivot_1.geometry} material={materials.pivot} skeleton={nodes.pivot_1.skeleton} />
                </group>
            </group>
        </group>
    )
}

export function SpaceShip() {
    const spring = useSpring({
        from: { scale: 0.1, position: [-3, -1, 0], rotation: [1.5, 3, -2] },
        to: [
            { scale: 0.1, position: [-3, -1.2, 0], rotation: [1.55, 3, -2] },
            { scale: 0.1, position: [-3, -1, 0], rotation: [1.45, 3, -2] },
            { scale: 0.1, position: [-3, -1, 0], rotation: [1.5, 3, -2] },
        ],
        config: { duration: 2000 },
        loop: { reverse: false },
    });
    const AnimatedModel = animated(Model);
    return <AnimatedModel position={spring.position} scale={spring.scale} rotation={spring.rotation}></AnimatedModel>

}

useGLTF.preload('/spaceShip.gltf')
